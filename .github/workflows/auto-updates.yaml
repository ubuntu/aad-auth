name: Update translations and debian/control in main automatically
on:
  push:
    branches:
      - main
    paths-ignore:
      - po/*
      - debian/control
concurrency: auto-update

jobs:
  update-po:
    name: Update po files
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y gettext
      # Checkout code with git
      - uses: actions/checkout@v3
        with:
          ref: main
      # Install go
      - uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      # Update po if needed
      - name: Check po files
        id: checkpo
        run: |
          set -eu

          hasModif="false"
          go generate ./internal/i18n/
          # Exclude line diffs only
          MODIFIED=$(git difftool -y -x "diff -Nup -I '^#: '" po/)
          if [ -n "$MODIFIED" ]; then
            hasModif="true"
          fi
          echo "modified=${hasModif}" >> $GITHUB_ENV
      - name: Create Pull Request
        id: create-pr
        if: ${{ env.modified == 'true' }}
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Auto update po files
          title: Auto update po files
          labels: po, automated pr
          body: "[Auto-generated pull request](https://github.com/ubuntu/aad-auth/actions/workflows/auto-updates.yaml) by GitHub Action"
          branch: auto-update-po
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Automerge created Pull Request
        if: steps.create-pr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: merge

  update-rust-vendored-sources:
    name: Update XS-Vendored-Sources-Rust on debian/control
    needs: update-po
    runs-on: ubuntu-latest
    # Right now, ubuntu 22.04 does not have the dh-cargo-vendored-sources script that is needed to
    # run this job, so we need to run it inside a rolling container to get the latest version possible.
    # This should be updated as soon as the dh-cargo version with the mentioned script gets ported to
    # 22.04 or ubuntu-latest changes to a more recent version.
    container:
      image: ubuntu:rolling
    steps:
      - name: Install dependencies
        run: |
          DEBIAN_FRONTEND=noninteractive apt update
          DEBIAN_FRONTEND=noninteractive apt install -y cargo dh-cargo git
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Vendoring the dependencies
        run: |
          cargo vendor vendor_rust/
      - name: Update XS-Vendored-Sources-Rust
        run: |
          set -eu

          export CARGO_VENDOR_DIR=vendor_rust/
          VENDORED_SOURCES=$(/usr/share/cargo/bin/dh-cargo-vendored-sources 2>&1 || true)
          OUTPUT=$(echo "$VENDORED_SOURCES" | grep ^XS-Vendored-Sources-Rust: || true)
          if [ -z "$OUTPUT" ]; then
            echo "XS-Vendored-Sources-Rust is up to date. No change is needed.";
            exit 0
          fi
          sed -i "s/^XS-Vendored-Sources-Rust:.*/$OUTPUT/" debian/control

          echo "modified=true" >> $GITHUB_ENV
        shell: bash
      # Since we run this job in a container, we need to manually add the safe directory due to some
      # issues between actions/checkout and actions/runner, which seem to be triggered by multiple
      # causes (e.g. https://github.com/actions/runner-images/issues/6775, https://github.com/actions/checkout/issues/1048#issuecomment-1356485556).
      - name: work around permission issue with git vulnerability (we are local here). TO REMOVE
        run: git config --global --add safe.directory /__w/aad-auth/aad-auth
      - name: Create Pull Request
        id: create-pr
        if: ${{ env.modified == 'true' }}
        # V5 Beta needed because of some problems between this action and container runners.
        # See more on: https://github.com/peter-evans/create-pull-request/issues/1170
        uses: peter-evans/create-pull-request@v5-beta
        with:
          commit-message: Auto update Rust vendored sources in debian/control
          title: Auto update Rust vendored sources in debian/control
          labels: control, automated pr
          branch: auto-update-rust-vendored-sources
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Automerge created Pull Request
        if: steps.create-pr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: merge

  update-fake-checksum-file:
    name: 'Update the fake checksum file at d/cargo-checksum.json'
    needs: update-rust-vendored-sources
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt update
          sudo DEBIAN_FRONTEND=noninteractive apt install -y git nodejs
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: 'Install GitHub script dependencies'
        run: npm install -D toml @types/node
      - name: 'Update the checksum file'
        uses: actions/github-script@v6
        id: update-checksum
        with:
          script: |
            const toml = require("toml");
            const fs = require("fs");
            const checksum_path = "./debian/cargo-checksum.json";
            /** @typedef LockEntry @prop {string} name @prop {string} checksum @prop {string} version */
            /** Read and parse the lock file
            * @param {string} path
            * @returns {any} */
            function readLock(path) {
              const lock = fs.readFileSync(path, { encoding: "utf-8" });
              return toml.parse(lock);
            }
            const lockfile = readLock("./Cargo.lock");
            /** @type {LockEntry?} */ const sd_block = lockfile.package.find(
              (/** @type {LockEntry} */ x) => x.name === "vcpkg"
            );
            if (!sd_block) throw new Error("vcpkg not found in the lock file");
            const old_cksum_file = require(checksum_path);
            if (old_cksum_file.package === sd_block.checksum) {
                console.info("Checksum is up-to-date. No update needed.");
                return false;
            }
            const new_cksum_file =
              JSON.stringify({
                package: sd_block.checksum,
                files: {},
              }) + "\n";
            fs.writeFileSync(checksum_path, new_cksum_file);
            console.info("Checksum file updated.");
            return true;
      - name: Create Pull Request
        id: create-pr
        if: ${{ steps.update-checksum.outputs.result == 'true' }}
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: Auto update Rust vendored sources checksums
          title: Auto update Rust vendored sources checksums
          labels: control, automated pr
          body: "[Auto-generated pull request](https://github.com/ubuntu/adsys/actions/workflows/auto-updates.yaml) by GitHub Action"
          branch: auto-update-rust-checksum
          delete-branch: true
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Automerge created Pull Request
        if: steps.create-pr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ steps.create-pr.outputs.pull-request-number }}
          merge-method: merge
